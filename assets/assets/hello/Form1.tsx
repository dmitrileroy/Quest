/**********************************************************************
*
*   Component generated by Quest
*
*   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts. 
*   To preseve that abilty, always export from Quest to regenerate this file.
*   To setup props, bindings and actions, use the Quest editor
*   Code Logic goes in the hook associated with this component
*
*   For help and further details refer to: https://www.quest.ai/docs
*
*
**********************************************************************/

import React from 'react';
import { TextField, Button } from '@mui/material';
import { styled } from '@mui/material/styles';

 
const TypeQuest: any = styled("div")({  
  backgroundColor: `rgba(255, 255, 255, 1)`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  width: `600px`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `40px`,  
  boxSizing: `border-box`,  
  overflow: `hidden`,  
});
  
const ContactUs: any = styled("div")(({ theme }: any) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(0, 0, 0, 1)`,  
  fontStyle: theme.typography["Typography"]["H4"].fontStyle,  
  fontFamily: theme.typography["Typography"]["H4"].fontFamily,  
  fontWeight: theme.typography["Typography"]["H4"].fontWeight,  
  fontSize: theme.typography["Typography"]["H4"].fontSize,  
  letterSpacing: theme.typography["Typography"]["H4"].letterSpacing,  
  textDecoration: theme.typography["Typography"]["H4"].textDecoration,  
  lineHeight: theme.typography["Typography"]["H4"].lineHeight,  
  textTransform: theme.typography["Typography"]["H4"].textTransform,  
  margin: `0px`,  
}));
  
const Frame3: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `40px 0px 0px 0px`,  
});
  
const Row1: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  flexGrow: `1`,  
  margin: `0px`,  
});
  
const TextFieldStandard: any = styled(TextField)({  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const TextFieldStandard1: any = styled(TextField)({  
  alignSelf: `stretch`,  
  margin: `40px 0px 0px 0px`,  
});
  
const Row2: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  flexGrow: `1`,  
  margin: `0px 0px 0px 40px`,  
});
  
const TextFieldStandard2: any = styled(TextField)({  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const TextFieldStandard3: any = styled(TextField)({  
  alignSelf: `stretch`,  
  margin: `40px 0px 0px 0px`,  
});
  
const TextFieldStandard4: any = styled(TextField)({  
  alignSelf: `stretch`,  
  margin: `40px 0px 0px 0px`,  
});
  
const Btm: any = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `40px 0px 0px 0px`,  
});
  
const ButtonContained: any = styled(Button)({  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
 
function Form1(): JSX.Element {
  return (
    <TypeQuest >
       <ContactUs >
         {`Contact Us`}
           </ContactUs>
       <Frame3 >
         <Row1 >
           <TextFieldStandard variant="standard" size="small"  label={`Full Name`} helperText="Helper text"   />
           <TextFieldStandard1 variant="standard" size="small"  label={`Phone`} helperText="Helper text"   />
         </Row1>
         <Row2 >
           <TextFieldStandard2 variant="standard" size="small"  label={`Company`} helperText="Helper text"   />
           <TextFieldStandard3 variant="standard" size="small"  label={`Email`} helperText="Helper text"   />
         </Row2>
       </Frame3>
       <TextFieldStandard4 variant="standard" size="small"  label={`Comments`} helperText="Helper text"   />
       <Btm >
         <ButtonContained variant="contained" size="large" color="primary"    > Submit </ButtonContained>
       </Btm>
     </TypeQuest>
   );
}

export default Form1;
